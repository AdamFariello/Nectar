-- MySQL Script generated by MySQL Workbench
-- Mon 17 Apr 2023 09:27:17 AM EDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema user
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `user` ;

-- -----------------------------------------------------
-- Schema user
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `user` ;
-- -----------------------------------------------------
-- Schema products
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `products` ;

-- -----------------------------------------------------
-- Schema products
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `products` ;
-- -----------------------------------------------------
-- Schema administration
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `administration` ;

-- -----------------------------------------------------
-- Schema administration
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `administration` ;
USE `user` ;

-- -----------------------------------------------------
-- Table `user`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user`.`user` ;

CREATE TABLE IF NOT EXISTS `user`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_email` VARCHAR(45) NOT NULL,
  `user_password` VARCHAR(45) NOT NULL,
  `user_telephone` VARCHAR(45) NULL DEFAULT 'null',
  UNIQUE INDEX `userID_UNIQUE` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `userEmail_UNIQUE` (`user_email` ASC) VISIBLE,
  UNIQUE INDEX `userTelephone_UNIQUE` (`user_telephone` ASC) VISIBLE,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`.`userPurchasingProfileDetails`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user`.`userPurchasingProfileDetails` ;

CREATE TABLE IF NOT EXISTS `user`.`userPurchasingProfileDetails` (
  `uppd_id` INT NOT NULL AUTO_INCREMENT,
  `uppd_nameOnCard` VARCHAR(45) NOT NULL,
  `uppd_dateOnCard` DATE NOT NULL,
  `uppd_numberOnCard` VARCHAR(45) NOT NULL,
  `uppd_securityCodeOnCard` VARCHAR(45) NOT NULL,
  `uppd_typeOfCard` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`uppd_id`),
  UNIQUE INDEX `uppd_id_UNIQUE` (`uppd_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`.`wishListAutoBuyOperators`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user`.`wishListAutoBuyOperators` ;

CREATE TABLE IF NOT EXISTS `user`.`wishListAutoBuyOperators` (
  `wlabo_operator` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`wlabo_operator`),
  UNIQUE INDEX `wlabo_condition_UNIQUE` (`wlabo_operator` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`.`wishListAutoBuyConditionType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user`.`wishListAutoBuyConditionType` ;

CREATE TABLE IF NOT EXISTS `user`.`wishListAutoBuyConditionType` (
  `wlabct_type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`wlabct_type`),
  UNIQUE INDEX `wlabct_type_UNIQUE` (`wlabct_type` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`.`userWishListAutoBuySettings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user`.`userWishListAutoBuySettings` ;

CREATE TABLE IF NOT EXISTS `user`.`userWishListAutoBuySettings` (
  `uwlaubs_id` INT NOT NULL AUTO_INCREMENT,
  `wlabct_type` VARCHAR(45) NOT NULL,
  `wlabo_operator` VARCHAR(45) NOT NULL,
  `uwlaubs_conditionValue` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`uwlaubs_id`),
  UNIQUE INDEX `uwlaubs_id_UNIQUE` (`uwlaubs_id` ASC) VISIBLE,
  INDEX `fk_userWishListAutoBuySetting_wishListAutoBuyOperators1_idx` (`wlabo_operator` ASC) VISIBLE,
  INDEX `fk_userWishListAutoBuySetting_wishListAutoBuyConditionType1_idx` (`wlabct_type` ASC) VISIBLE,
  CONSTRAINT `fk_userWishListAutoBuySetting_wishListAutoBuyOperators1`
    FOREIGN KEY (`wlabo_operator`)
    REFERENCES `user`.`wishListAutoBuyOperators` (`wlabo_operator`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userWishListAutoBuySetting_wishListAutoBuyConditionType1`
    FOREIGN KEY (`wlabct_type`)
    REFERENCES `user`.`wishListAutoBuyConditionType` (`wlabct_type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`product` ;

CREATE TABLE IF NOT EXISTS `products`.`product` (
  `product_id` INT NOT NULL AUTO_INCREMENT,
  `product_siteName` VARCHAR(45) NOT NULL,
  `product_siteURL` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`product_id`),
  UNIQUE INDEX `product_id_UNIQUE` (`product_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`.`userWishList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user`.`userWishList` ;

CREATE TABLE IF NOT EXISTS `user`.`userWishList` (
  `user_id` INT NOT NULL,
  `product_id` INT NULL DEFAULT NULL,
  `uwlaubs_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_userWishList_userWishListAutoBuySettings1_idx` (`uwlaubs_id` ASC) VISIBLE,
  INDEX `fk_userWishList_product_id_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_userWishList_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userWishList_userWishListAutoBuySettings1`
    FOREIGN KEY (`uwlaubs_id`)
    REFERENCES `user`.`userWishListAutoBuySettings` (`uwlaubs_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userWishList_product_id`
    FOREIGN KEY (`product_id`)
    REFERENCES `products`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`.`userPurchasingProfile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user`.`userPurchasingProfile` ;

CREATE TABLE IF NOT EXISTS `user`.`userPurchasingProfile` (
  `user_id` INT NOT NULL,
  `uppd_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `uppd_id`),
  INDEX `fk_userPurchasingProfile_userPurchasingProfileDetails1_idx` (`uppd_id` ASC) VISIBLE,
  CONSTRAINT `fk_userPurchasingProfile_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userPurchasingProfile_userPurchasingProfileDetails1`
    FOREIGN KEY (`uppd_id`)
    REFERENCES `user`.`userPurchasingProfileDetails` (`uppd_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`.`timestamps`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user`.`timestamps` ;

CREATE TABLE IF NOT EXISTS `user`.`timestamps` (
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL);

USE `products` ;

-- -----------------------------------------------------
-- Table `products`.`ebayTagsDescription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`ebayTagsDescription` ;

CREATE TABLE IF NOT EXISTS `products`.`ebayTagsDescription` (
  `etd_id` INT NOT NULL AUTO_INCREMENT,
  `et_tag` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`etd_id`),
  UNIQUE INDEX `etd_id_UNIQUE` (`etd_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`ebayCategoryEnum`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`ebayCategoryEnum` ;

CREATE TABLE IF NOT EXISTS `products`.`ebayCategoryEnum` (
  `ece_category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ece_category`),
  UNIQUE INDEX `ece_category_UNIQUE` (`ece_category` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`ebay`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`ebay` ;

CREATE TABLE IF NOT EXISTS `products`.`ebay` (
  `product_id` INT NOT NULL,
  `ebay_siteID` VARCHAR(45) NOT NULL,
  `ebay_seller` VARCHAR(45) NOT NULL,
  `ece_category` VARCHAR(45) NOT NULL,
  UNIQUE INDEX `product_id_UNIQUE` (`product_id` ASC) VISIBLE,
  UNIQUE INDEX `ebay_siteID_UNIQUE` (`ebay_siteID` ASC) VISIBLE,
  PRIMARY KEY (`product_id`),
  INDEX `fk_ebay_2_idx` (`ece_category` ASC) VISIBLE,
  CONSTRAINT `fk_ebay_1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ebay_2`
    FOREIGN KEY (`ece_category`)
    REFERENCES `products`.`ebayCategoryEnum` (`ece_category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`ebayTags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`ebayTags` ;

CREATE TABLE IF NOT EXISTS `products`.`ebayTags` (
  `product_id` INT NOT NULL,
  `ebayTagsDescription_etd_id` INT NOT NULL,
  PRIMARY KEY (`product_id`, `ebayTagsDescription_etd_id`),
  INDEX `fk_ebayTags_2_idx` (`ebayTagsDescription_etd_id` ASC) VISIBLE,
  CONSTRAINT `fk_ebayTags_1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products`.`ebay` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ebayTags_2`
    FOREIGN KEY (`ebayTagsDescription_etd_id`)
    REFERENCES `products`.`ebayTagsDescription` (`etd_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`ebayProductPriceHistoryDescription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`ebayProductPriceHistoryDescription` ;

CREATE TABLE IF NOT EXISTS `products`.`ebayProductPriceHistoryDescription` (
  `epphd_id` INT NOT NULL AUTO_INCREMENT,
  `epphd_price` DOUBLE NOT NULL,
  `epphd_date` DATETIME NOT NULL,
  PRIMARY KEY (`epphd_id`),
  UNIQUE INDEX `epphd_id_UNIQUE` (`epphd_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`ebayProductPriceHistory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`ebayProductPriceHistory` ;

CREATE TABLE IF NOT EXISTS `products`.`ebayProductPriceHistory` (
  `product_id` INT NOT NULL,
  `epphd_id` INT NOT NULL,
  PRIMARY KEY (`product_id`, `epphd_id`),
  INDEX `fk_ebayProductPriceHistory_2_idx` (`epphd_id` ASC) VISIBLE,
  CONSTRAINT `fk_ebayProductPriceHistory_1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products`.`ebay` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ebayProductPriceHistory_2`
    FOREIGN KEY (`epphd_id`)
    REFERENCES `products`.`ebayProductPriceHistoryDescription` (`epphd_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`amazonTagsDetails`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`amazonTagsDetails` ;

CREATE TABLE IF NOT EXISTS `products`.`amazonTagsDetails` (
  `atd_id` INT NOT NULL AUTO_INCREMENT,
  `atd_tag` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`atd_id`),
  UNIQUE INDEX `atd_id_UNIQUE` (`atd_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`amazonCategoryEnum`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`amazonCategoryEnum` ;

CREATE TABLE IF NOT EXISTS `products`.`amazonCategoryEnum` (
  `ace_category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ace_category`),
  UNIQUE INDEX `ace_category_UNIQUE` (`ace_category` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`amazon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`amazon` ;

CREATE TABLE IF NOT EXISTS `products`.`amazon` (
  `product_id` INT NOT NULL,
  `amazon_siteID` VARCHAR(15) NOT NULL,
  `amazon_seller` VARCHAR(45) NULL DEFAULT 'null',
  `ace_category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`product_id`),
  UNIQUE INDEX `product_id_UNIQUE` (`product_id` ASC) VISIBLE,
  UNIQUE INDEX `amazon_siteID_UNIQUE` (`amazon_siteID` ASC) VISIBLE,
  INDEX `fk_amazon_2_idx` (`ace_category` ASC) VISIBLE,
  CONSTRAINT `fk_amazon_1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_amazon_2`
    FOREIGN KEY (`ace_category`)
    REFERENCES `products`.`amazonCategoryEnum` (`ace_category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`amazonTags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`amazonTags` ;

CREATE TABLE IF NOT EXISTS `products`.`amazonTags` (
  `product_id` INT NOT NULL,
  `atd_id` INT NOT NULL,
  PRIMARY KEY (`product_id`, `atd_id`),
  INDEX `fk_amazonTags_2_idx` (`atd_id` ASC) VISIBLE,
  CONSTRAINT `fk_amazonTags_1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products`.`amazon` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_amazonTags_2`
    FOREIGN KEY (`atd_id`)
    REFERENCES `products`.`amazonTagsDetails` (`atd_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`amazonProductPriceHistoryDetails`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`amazonProductPriceHistoryDetails` ;

CREATE TABLE IF NOT EXISTS `products`.`amazonProductPriceHistoryDetails` (
  `apphd_id` INT NOT NULL AUTO_INCREMENT,
  `apphd_price` DOUBLE NOT NULL,
  `apphd_date` DATETIME NOT NULL,
  PRIMARY KEY (`apphd_id`),
  UNIQUE INDEX `apphd_id_UNIQUE` (`apphd_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`.`amazonProductPriceHistory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products`.`amazonProductPriceHistory` ;

CREATE TABLE IF NOT EXISTS `products`.`amazonProductPriceHistory` (
  `product_id` INT NOT NULL,
  `apphd_id` INT NOT NULL,
  PRIMARY KEY (`product_id`, `apphd_id`),
  INDEX `fk_amazonProductPriceHistory_2_idx` (`apphd_id` ASC) VISIBLE,
  CONSTRAINT `fk_amazonProductPriceHistory_1`
    FOREIGN KEY (`product_id`)
    REFERENCES `products`.`amazon` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_amazonProductPriceHistory_2`
    FOREIGN KEY (`apphd_id`)
    REFERENCES `products`.`amazonProductPriceHistoryDetails` (`apphd_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `administration` ;

-- -----------------------------------------------------
-- Table `administration`.`administration`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `administration`.`administration` ;

CREATE TABLE IF NOT EXISTS `administration`.`administration` (
  `admin_id` INT NOT NULL AUTO_INCREMENT,
  `admin_username` VARCHAR(45) NOT NULL,
  `admin_password` VARCHAR(45) NOT NULL,
  `admin_host` VARCHAR(45) NOT NULL,
  `admin_port` INT NOT NULL DEFAULT 3306,
  `admin_url` VARCHAR(254) NOT NULL,
  PRIMARY KEY (`admin_id`),
  UNIQUE INDEX `admin_id_UNIQUE` (`admin_id` ASC) VISIBLE,
  UNIQUE INDEX `admin_username_UNIQUE` (`admin_username` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = armscii8;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
